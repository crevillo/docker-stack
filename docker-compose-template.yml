### Notes
#
# - using the 'build' config instead of 'image' allows to build the platform with just 'docker-compose build'
# - SYS_PTRACE capability is needed to allow tghe containers to read /proc/$PID, which is needed by init scripts
#
# The docker-compose 'service' name corresponds to the top-level yml keys, whereas the container name is used in most
# 'docker' commands.
# Keeping a separate container name for each project allows to run many container platforms in parallel
version: '3'
networks:
    default:
        external:
            name: ${DOCKER_NETWORK_NAME}
services:
    front1:
        image: crevillo/front
        hostname: front1.${DOCKER_NETWORK_NAME}
        container_name: front1
        privileged: true
        volumes:
            - "$DOCKER_WWW_ROOT:$DOCKER_WWW_DEST"
            - ./logs/cli:/var/log/php
            # files in /tmp/cron.d get managed by bootstrap.sh
            - ./config/cli/cron.d:/tmp/cron.d
            - ~/.gitconfig:/home/site/.gitconfig
            - ~/.ssh/config:/home/site/.ssh/config
            - "$SSH_AUTH_SOCK:/ssh-agent"
            - "./config/cli/php5/custom_vars.ini:$DOCKER_PHP_CONF_PATH/cli/conf.d/custom_vars.ini"
            - "./config/cli/php5/timezone.ini:$DOCKER_PHP_CONF_PATH/cli/conf.d/timezone.ini"
        environment:
            - SSH_AUTH_SOCK=/ssh-agent
            - PROJECT_NAME=${DOCKER_PROJECT_NAME}
        env_file:
            - docker-compose.env
            - docker-compose.env.local
        cap_add:
            - SYS_PTRACE
        networks:
            - default
    back1:
        image: crevillo/back
        hostname: back1.${DOCKER_NETWORK_NAME}
        container_name: back1
        privileged: true
        volumes:
            - "$DOCKER_WWW_ROOT:$DOCKER_WWW_DEST"
            - ./logs/cli:/var/log/php
            # files in /tmp/cron.d get managed by bootstrap.sh
            - ./config/cli/cron.d:/tmp/cron.d
            - ~/.gitconfig:/home/site/.gitconfig
            - ~/.ssh/config:/home/site/.ssh/config
            - "$SSH_AUTH_SOCK:/ssh-agent"
            - "./config/cli/php5/custom_vars.ini:$DOCKER_PHP_CONF_PATH/cli/conf.d/custom_vars.ini"
            - "./config/cli/php5/timezone.ini:$DOCKER_PHP_CONF_PATH/cli/conf.d/timezone.ini"
            - "/home/$USER/.tacoma.yml:/home/site/.tacoma.yml"
            - "$HOME/.ssh:/home/site/.ssh/"
        environment:
            - SSH_AUTH_SOCK=/ssh-agent
            - SYMFONY_ENV=docker
            - SYMFONY_HTTP_CACHE=0
        env_file:
            - docker-compose.env
            - docker-compose.env.local
        cap_add:
            - SYS_PTRACE
        networks:
            - default
    db:
        image: crevillo/mysql
        hostname: db.${DOCKER_NETWORK_NAME}
        container_name: db
        # nb: this prevents the image to start on some ubuntu installs because of apparmor config...
        #privileged: true
        volumes:
            - ./config/mysql/:/etc/mysql/conf.d/
            - ./data/mysql/:/var/lib/mysql
            - ./logs/mysql/:/var/log/mysql
        env_file:
            - docker-compose.env
            - docker-compose.env.local
        cap_add:
            - SYS_PTRACE
        command: ["/root/bootstrap.sh", "mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci"]
        networks:
            - default
    redis:
        image: crevillo/redis
        hostname: redis.${DOCKER_NETWORK_NAME}
        container_name: redis
        cap_add:
            - SYS_PTRACE
        networks:
            - default
    haproxy:
        image: crevillo/haproxy
        hostname: haproxy.${DOCKER_PROJECT_NAME}
        container_name: haproxy
        ports:
           - "80:80"
           - "443:443"
        env_file:
            - docker-compose.env
            - docker-compose.env.local
        depends_on:
           - front1
           - back1
